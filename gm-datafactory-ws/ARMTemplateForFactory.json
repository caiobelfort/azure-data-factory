{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gm-datafactory-ws"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks'"
		},
		"AzureDatabricksDeltaLake_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake'"
		},
		"bidb_linked_service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bidb_linked_service'"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gmdatalakestoragepoc01.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BI15A_MOVIMENTO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LAST_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[get_watermark]",
								"storedProcedureParameters": {
									"process_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.src_table_name",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermark_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "NEW_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(@{pipeline().parameters.src_incremental_col}) AS new_watermark\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "PARTITIONS",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set Staging Dir Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT @{pipeline().parameters.src_partition_col} AS part\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)\nWHERE @{pipeline().parameters.src_incremental_col} > @{activity('LAST_WATERMARK').output.firstRow.last_watermark} \nAND @{pipeline().parameters.src_incremental_col} <= @{activity('NEW_WATERMARK').output.firstRow.new_watermark};",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate Over Partitions",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "PARTITIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('PARTITIONS').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Copy Part to Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "staging/@{pipeline().parameters.src_table_name}/"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"additionalColumns": [
												{
													"name": "__dtts_extracao",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT *\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)\nWHERE @{pipeline().parameters.src_incremental_col} > @{activity('LAST_WATERMARK').output.firstRow.last_watermark}\nAND @{pipeline().parameters.src_incremental_col} <= @{activity('NEW_WATERMARK').output.firstRow.new_watermark}\nAND @{pipeline().parameters.src_partition_col} = @{item().part}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "gmcore_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "staging_ds",
											"type": "DatasetReference",
											"parameters": {
												"dirName": {
													"value": "@{variables('staging_dir_name')}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Insert into Raw Layer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Iterate Over Partitions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/caio@caiobelfort.onmicrosoft.com/staging-to-raw",
							"baseParameters": {
								"input-path": {
									"value": "/mnt/staging/@{variables('staging_dir_name')}",
									"type": "Expression"
								},
								"raw-path": {
									"value": "@{pipeline().parameters.dest_table_name}",
									"type": "Expression"
								},
								"obs-msg": {
									"value": "Inserted By ADF Pipeline: @{pipeline().Pipeline} at Run: @{pipeline().RunId}",
									"type": "Expression"
								},
								"input-format": "parquet",
								"partition-by": {
									"value": "@{pipeline().parameters.dest_partition_col}",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Last Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Insert into Raw Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_watermark]",
							"storedProcedureParameters": {
								"process_name": {
									"value": {
										"value": "@pipeline().parameters.src_table_name",
										"type": "Expression"
									},
									"type": "String"
								},
								"last_rowversion": {
									"value": {
										"value": "@activity('NEW_WATERMARK').output.firstRow.new_watermark",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bidb_linked_service",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete From Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Update Last Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "staging_ds",
								"type": "DatasetReference",
								"parameters": {
									"dirName": {
										"value": "@{variables('staging_dir_name')}",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Set Staging Dir Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LAST_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NEW_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "staging_dir_name",
							"value": {
								"value": "@{pipeline().parameters.src_table_name}/incremental_from_@{activity('LAST_WATERMARK').output.firstRow.last_watermark}_to_@{activity('NEW_WATERMARK').output.firstRow.new_watermark}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"src_table_name": {
						"type": "string",
						"defaultValue": "bi.dbo.bi15a_movimento"
					},
					"src_partition_col": {
						"type": "string",
						"defaultValue": "bi15a_id_filial"
					},
					"dest_table_name": {
						"type": "string",
						"defaultValue": "/mnt/raw/rdbms/mssql/gmcore/bi/dbo/bi15a_movimento"
					},
					"dest_partition_col": {
						"type": "string",
						"defaultValue": "bi15a_id_filial"
					},
					"src_incremental_col": {
						"type": "string",
						"defaultValue": "cast(bi15a_rowversion as bigint)"
					}
				},
				"variables": {
					"staging_dir_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SRC_EXTRACAO/GMCORE/BI"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-08T16:03:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/watermark_ds')]",
				"[concat(variables('factoryId'), '/datasets/gmcore_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/linkedServices/bidb_linked_service')]",
				"[concat(variables('factoryId'), '/datasets/staging_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI15A_MOVIMENTO1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LAST_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[get_watermark]",
								"storedProcedureParameters": {
									"process_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.src_table_name",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermark_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "NEW_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(@{pipeline().parameters.src_incremental_col}) AS new_watermark\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "PARTITIONS",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set Staging Dir Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT @{pipeline().parameters.src_partition_col} AS part\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)\nWHERE @{pipeline().parameters.src_incremental_col} > @{activity('LAST_WATERMARK').output.firstRow.last_watermark} \nAND @{pipeline().parameters.src_incremental_col} <= @{activity('NEW_WATERMARK').output.firstRow.new_watermark};",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate Over Partitions",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "PARTITIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('PARTITIONS').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Copy Part to Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "staging/@{pipeline().parameters.src_table_name}/"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"additionalColumns": [
												{
													"name": "__dtts_extracao",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT *\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)\nWHERE @{pipeline().parameters.src_incremental_col} > @{activity('LAST_WATERMARK').output.firstRow.last_watermark}\nAND @{pipeline().parameters.src_incremental_col} <= @{activity('NEW_WATERMARK').output.firstRow.new_watermark}\nAND @{pipeline().parameters.src_partition_col} = @{item().part}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "gmcore_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "staging_ds",
											"type": "DatasetReference",
											"parameters": {
												"dirName": {
													"value": "@variables('staging_dir_name')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Insert into Raw Layer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Iterate Over Partitions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/caio@caiobelfort.onmicrosoft.com/staging-to-raw",
							"baseParameters": {
								"input-path": {
									"value": "@{variables('staging_dir_name')}",
									"type": "Expression"
								},
								"raw-path": {
									"value": "@{pipeline().parameters.dest_table_name}",
									"type": "Expression"
								},
								"obs-msg": {
									"value": "Inserted By ADF Pipeline: @{pipeline().Pipeline} at Run: @{pipeline().RunId}",
									"type": "Expression"
								},
								"input-format": "parquet",
								"partition-by": {
									"value": "@{pipeline().parameters.dest_partition_col}",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Last Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Insert into Raw Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_watermark]",
							"storedProcedureParameters": {
								"process_name": {
									"value": {
										"value": "@pipeline().parameters.src_table_name",
										"type": "Expression"
									},
									"type": "String"
								},
								"last_rowversion": {
									"value": {
										"value": "@activity('NEW_WATERMARK').output.firstRow.new_watermark",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bidb_linked_service",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete From Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Update Last Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "staging_ds",
								"type": "DatasetReference",
								"parameters": {
									"dirName": "someDir"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Set Staging Dir Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LAST_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NEW_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "staging_dir_name",
							"value": {
								"value": "@{pipeline().parameters.src_table_name}/incremental_from_@{activity('LAST_WATERMARK').output.firstRow.last_watermark}_to_@{activity('NEW_WATERMARK').output.firstRow.new_watermark}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"src_table_name": {
						"type": "string",
						"defaultValue": "bi.dbo.bi15b_movimento_itens"
					},
					"src_partition_col": {
						"type": "string",
						"defaultValue": "bi15b_id_filial"
					},
					"dest_table_name": {
						"type": "string",
						"defaultValue": "/mnt/raw/rdbms/mssql/gmcore/bi/dbo/bi15b_movimento_itens"
					},
					"dest_partition_col": {
						"type": "string",
						"defaultValue": "bi15b_id_filial"
					},
					"src_incremental_col": {
						"type": "string",
						"defaultValue": "cast(bi15b_rowversion as bigint)"
					}
				},
				"variables": {
					"staging_dir_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SRC_EXTRACAO/GMCORE/BI"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-08T16:03:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/watermark_ds')]",
				"[concat(variables('factoryId'), '/datasets/gmcore_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/linkedServices/bidb_linked_service')]",
				"[concat(variables('factoryId'), '/datasets/staging_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI15B_MOVIMENTO_ITENS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LAST_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[get_watermark]",
								"storedProcedureParameters": {
									"process_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.src_table_name",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermark_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "NEW_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(@{pipeline().parameters.src_incremental_col}) AS new_watermark\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "PARTITIONS",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set Staging Dir Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT @{pipeline().parameters.src_partition_col} AS part\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)\nWHERE @{pipeline().parameters.src_incremental_col} > @{activity('LAST_WATERMARK').output.firstRow.last_watermark} \nAND @{pipeline().parameters.src_incremental_col} <= @{activity('NEW_WATERMARK').output.firstRow.new_watermark};",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate Over Partitions",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "PARTITIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('PARTITIONS').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Copy Part to Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "."
										},
										{
											"name": "Destination",
											"value": "staging/@{pipeline().parameters.src_table_name}/"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"additionalColumns": [
												{
													"name": "__dtts_extracao",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT *\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)\nWHERE @{pipeline().parameters.src_incremental_col} > @{activity('LAST_WATERMARK').output.firstRow.last_watermark}\nAND @{pipeline().parameters.src_incremental_col} <= @{activity('NEW_WATERMARK').output.firstRow.new_watermark}\nAND @{pipeline().parameters.src_partition_col} = @{item().part}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "gmcore_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "staging_ds",
											"type": "DatasetReference",
											"parameters": {
												"dirName": {
													"value": "@variables('staging_dir_name')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Insert into Raw Layer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Iterate Over Partitions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/caio@caiobelfort.onmicrosoft.com/staging-to-raw",
							"baseParameters": {
								"input-path": {
									"value": "/mnt/staging/@{variables('staging_dir_name')}",
									"type": "Expression"
								},
								"raw-path": {
									"value": "@{pipeline().parameters.dest_table_name}",
									"type": "Expression"
								},
								"obs-msg": {
									"value": "Inserted By ADF Pipeline: @{pipeline().Pipeline} at Run: @{pipeline().RunId}",
									"type": "Expression"
								},
								"input-format": "parquet",
								"partition-by": {
									"value": "@{pipeline().parameters.dest_partition_col}",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Last Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Insert into Raw Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_watermark]",
							"storedProcedureParameters": {
								"process_name": {
									"value": {
										"value": "@pipeline().parameters.src_table_name",
										"type": "Expression"
									},
									"type": "String"
								},
								"last_rowversion": {
									"value": {
										"value": "@activity('NEW_WATERMARK').output.firstRow.new_watermark",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bidb_linked_service",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete From Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Update Last Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "staging_ds",
								"type": "DatasetReference",
								"parameters": {
									"dirName": {
										"value": "@variables('staging_dir_name')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Set Staging Dir Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LAST_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NEW_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "staging_dir_name",
							"value": {
								"value": "@{pipeline().parameters.src_table_name}/incremental_from_@{activity('LAST_WATERMARK').output.firstRow.last_watermark}_to_@{activity('NEW_WATERMARK').output.firstRow.new_watermark}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"src_table_name": {
						"type": "string",
						"defaultValue": "bi.dbo.bi15b_movimento_itens_new"
					},
					"src_partition_col": {
						"type": "string",
						"defaultValue": "bi15b_id_filial"
					},
					"dest_table_name": {
						"type": "string",
						"defaultValue": "/mnt/raw/rdbms/mssql/gmcore/bi/dbo/bi15b_movimento_itens"
					},
					"dest_partition_col": {
						"type": "string",
						"defaultValue": "bi15b_id_filial"
					},
					"src_incremental_col": {
						"type": "string",
						"defaultValue": "cast(bi15b_rowversion as bigint)"
					}
				},
				"variables": {
					"staging_dir_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SRC_EXTRACAO/GMCORE/BI"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-08T16:03:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/watermark_ds')]",
				"[concat(variables('factoryId'), '/datasets/gmcore_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/linkedServices/bidb_linked_service')]",
				"[concat(variables('factoryId'), '/datasets/staging_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CD62_ESTOQUE_MOVIMENTO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LAST_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[get_watermark]",
								"storedProcedureParameters": {
									"process_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.src_table_name",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermark_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "NEW_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(@{pipeline().parameters.src_incremental_col}) AS new_watermark\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Insert into Raw Layer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Part to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/caio@caiobelfort.onmicrosoft.com/staging-to-raw",
							"baseParameters": {
								"input-path": {
									"value": "/mnt/staging/@{variables('staging_dir_name')}",
									"type": "Expression"
								},
								"raw-path": {
									"value": "@{pipeline().parameters.dest_table_name}",
									"type": "Expression"
								},
								"obs-msg": {
									"value": "Inserted By ADF Pipeline: @{pipeline().Pipeline} at Run: @{pipeline().RunId}",
									"type": "Expression"
								},
								"input-format": "parquet"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Last Watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Insert into Raw Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_watermark]",
							"storedProcedureParameters": {
								"process_name": {
									"value": {
										"value": "@pipeline().parameters.src_table_name",
										"type": "Expression"
									},
									"type": "String"
								},
								"last_rowversion": {
									"value": {
										"value": "@activity('NEW_WATERMARK').output.firstRow.new_watermark",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "bidb_linked_service",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete From Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Update Last Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "staging_ds",
								"type": "DatasetReference",
								"parameters": {
									"dirName": "someDir"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Set Staging Dir Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LAST_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NEW_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "staging_dir_name",
							"value": {
								"value": "@{pipeline().parameters.src_table_name}/incremental_from_@{activity('LAST_WATERMARK').output.firstRow.last_watermark}_to_@{activity('NEW_WATERMARK').output.firstRow.new_watermark}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy Part to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Staging Dir Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "staging/@{pipeline().parameters.src_table_name}/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "__dtts_extracao",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM @{pipeline().parameters.src_table_name} (NOLOCK)\nWHERE @{pipeline().parameters.src_incremental_col} > @{activity('LAST_WATERMARK').output.firstRow.last_watermark}\nAND @{pipeline().parameters.src_incremental_col} <= @{activity('NEW_WATERMARK').output.firstRow.new_watermark};",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "staging_ds",
								"type": "DatasetReference",
								"parameters": {
									"dirName": {
										"value": "@variables('staging_dir_name')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"src_table_name": {
						"type": "string",
						"defaultValue": "bi.dbo.cd62_estoque_movimento"
					},
					"dest_table_name": {
						"type": "string",
						"defaultValue": "/mnt/raw/rdbms/mssql/gmcore/bi/dbo/bi15a_movimento"
					},
					"src_incremental_col": {
						"type": "string",
						"defaultValue": "cast(CD62_ROWVERSION as bigint)"
					}
				},
				"variables": {
					"staging_dir_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SRC_EXTRACAO/GMCORE/BI"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-08T16:03:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/watermark_ds')]",
				"[concat(variables('factoryId'), '/datasets/gmcore_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/linkedServices/bidb_linked_service')]",
				"[concat(variables('factoryId'), '/datasets/staging_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LAST_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[get_watermark]",
								"storedProcedureParameters": {
									"process_name": {
										"type": "String",
										"value": "inc_table"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "watermark_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Extract New Data to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LAST_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NEW_WATERMARK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *, GETUTCDATE() __dtts_extracao\nFROM bi.dbo.inc_table\nWHERE cast(rowversion as bigint) > @{activity('LAST_WATERMARK').output.firstRow.last_watermark} \n    AND cast(rowversion as bigint) <= @{activity('NEW_WATERMARK').output.firstRow.new_watermark}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "staging_ds",
								"type": "DatasetReference",
								"parameters": {
									"dirName": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "NEW_WATERMARK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT max(cast(rowversion as bigint)) as new_watermark\nFROM bi.dbo.inc_table",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "gmcore_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Import to Delta Table",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Extract New Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/caio@caiobelfort.onmicrosoft.com/staging-to-raw",
							"baseParameters": {
								"input-path": {
									"value": "/mnt/staging/@{pipeline().Pipeline}",
									"type": "Expression"
								},
								"raw-path": "/mnt/raw/inc_table",
								"partition-by": "store"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Import to Delta Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "staging_ds",
								"type": "DatasetReference",
								"parameters": {
									"dirName": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/watermark_ds')]",
				"[concat(variables('factoryId'), '/datasets/gmcore_ds')]",
				"[concat(variables('factoryId'), '/datasets/staging_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gmcore_bi_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bidb_linked_service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI15A_MOVIMENTO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bidb_linked_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gmcore_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bidb_linked_service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bidb_linked_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dirName": {
						"type": "string",
						"defaultValue": "someDir"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().dirName",
							"type": "Expression"
						},
						"fileSystem": "staging"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermark_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bidb_linked_service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "last_rowversion",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "rowversion_lookup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bidb_linked_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "MyAzureIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/MyAzureIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3607615068634270.10.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"instancePoolId": "0520-140542-hug356-pool-P3bu40pB",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "8.2.x-scala2.12",
					"newClusterInitScripts": []
				},
				"connectVia": {
					"referenceName": "MyAzureIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/MyAzureIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-3607615068634270.10.azuredatabricks.net",
					"clusterId": "0427-195853-yucca183",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake_accessToken')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bidb_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('bidb_linked_service_connectionString')]"
				},
				"connectVia": {
					"referenceName": "MyAzureIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/MyAzureIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyBITrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-20T13:07:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyAzureIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": true
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {
				"preventDataExfiltration": false
			},
			"dependsOn": []
		}
	]
}