{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "LAST_WATERMARK",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[get_watermark]",
						"storedProcedureParameters": {
							"process_name": {
								"type": "String",
								"value": "inc_table"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "watermark_ds",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Extract New Data to Staging",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LAST_WATERMARK",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "NEW_WATERMARK",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT *, GETUTCDATE() __dtts_extracao\nFROM bi.dbo.inc_table\nWHERE cast(rowversion as bigint) > @{activity('LAST_WATERMARK').output.firstRow.last_watermark} \n    AND cast(rowversion as bigint) <= @{activity('NEW_WATERMARK').output.firstRow.new_watermark}\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "gmcore_ds",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "staging_ds",
						"type": "DatasetReference",
						"parameters": {
							"dirName": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "NEW_WATERMARK",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT max(cast(rowversion as bigint)) as new_watermark\nFROM bi.dbo.inc_table",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "gmcore_ds",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Import to Delta Table",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Extract New Data to Staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/caio@caiobelfort.onmicrosoft.com/staging-to-raw",
					"baseParameters": {
						"input-path": {
							"value": "/mnt/staging/@{pipeline().Pipeline}",
							"type": "Expression"
						},
						"raw-path": "/mnt/raw/inc_table",
						"partition-by": "store"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Delete1",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Import to Delta Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "staging_ds",
						"type": "DatasetReference",
						"parameters": {
							"dirName": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"annotations": []
	}
}